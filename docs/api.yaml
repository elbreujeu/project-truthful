openapi: 3.0.3
info:
  title: Project Truthful
  description: |-
    This is the API documentation for Project Truthful. This API is used to interact with the Project Truthful backend.
  contact:
    email: julien.barrere@epitech.eu
  version: dev
tags:
  - name: debug
    description: Debugging endpoints
  - name: user
    description: User endpoints
  - name: question
    description: Question endpoints
  - name: moderation
    description: Moderation endpoints
paths:
  /hello_world:
    get:
      tags:
        - debug
      summary: Get a hello world message.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Hello, World!
  /register:
    post:
      tags:
        - user
      summary: Register a new user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: johndoe
                password:
                  type: string
                  example: Toto12345
                email_address:
                  type: string
                  example: toto@toto.fr
                birthdate:
                  type: string
                  example: 2000-01-01
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
  /login:
    post:
      tags:
        - user
      summary: Log in a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: johndoe
                password:
                  type: string
                  example: Toto12345
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
  /refresh_token:
    post:
      tags:
        - user
      summary: Refresh access token, need Bearer token in Authorization header.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: <new_access_token_value>
        '400':
          description: Bad Request
  /get_user_profile/{user}:
    get:
      tags:
        - user
      summary: Get user profile
      parameters:
        - in: path
          name: user
          required: true
          schema:
            type: string
          description: The username of the user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  username:
                    type: string
                    example: johndoe
                  display_name:
                    type: string
                    example: John Doe
                  follower_count:
                    type: integer
                    example: 1
                  following_count:
                    type: integer
                    example: 1
                  answer_count:
                    type: integer
                    example: 1
                  answers:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        is_author_anonymous:
                          type: boolean
                          example: true
                        author:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            username:
                              type: string
                              example: johndoe
                          example: {id: 1, username: johndoe}
                        question_text: 
                          type: string
                          example: What is the meaning of life?
                        answer_text:
                          type: string
                          example: "42"
                        answer_date:
                          type: string
                          example: 02/02/2022
                        created_at:
                          type: string
                          example: '2022-01-01T12:00:00Z'
                        like_count:
                          type: integer
                          example: 1
        '404':
          description: Not Found
        '400':
          description: Bad Request
  /follow_user:
    post:
      tags:
        - user
      summary: Follow or unfollow a user. Need Bearer token in Authorization header.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: integer
                  example: 1
                follow:
                  type: boolean
                  example: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
  /ask_question:
    post:
      tags:
        - question
      summary: Ask a question. Need Bearer token in Authorization header if user is not anonymous.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                question:
                  type: string
                  example: What is the meaning of life?
                user_id:
                  type: integer
                  example: 1
                is_author_anonymous:
                  type: boolean
                  example: true
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
  /get_questions:
    get:
      tags:
        - question
      summary: Get all questions. Need Bearer token in Authorization header.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    text:
                      type: string
                      example: What is the meaning of life?
                    is_author_anonymous:
                      type: boolean
                      example: true
                    author:
                      type: string
                      example: johndoe
                    receiver_id:
                      type: integer
                      example: 1
                    created_at:
                      type: string
                      format: date-time
                      example: '2022-01-01T12:00:00Z'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
  /answer_question:
    post:
      tags:
        - question
      summary: Answer a question. Need Bearer token in Authorization header.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                question_id:
                  type: integer
                  example: 1
                text:
                  type: string
                  example: "oui ahah"
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
  /like_answer:
    post:
      tags:
        - question
      summary: Like or unlike an answer. Need Bearer token in Authorization header.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                answer_id:
                  type: integer
                  example: 1
                like:
                  type: boolean
                  example: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
  /delete_answer:
    post:
      tags:
        - question
      summary: Delete an answer. Need Bearer token in Authorization header.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                answer_id:
                  type: integer
                  example: 1
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
  /delete_question:
    post:
      tags:
        - question
      summary: Delete a question. Need Bearer token in Authorization header.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                question_id:
                  type: integer
                  example: 1
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
  /users/update:
    put:
      tags:
        - user
      summary: Update user information. Need Bearer token in Authorization header.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                display_name:
                  type: string
                  example: John Doe
                email_address:
                  type: string
                  example: "johndoe@gmail.@gmail.com"
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
  /moderation/promote:
    post:
      tags:
        - moderation
      summary: Promote a user to moderator or admin. Need Bearer token in Authorization header and admin rights.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  example: 1
                promote_type:
                  type: string
                  example: moderator
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
  /moderation/get_user_questions/{user}:
    get:
      tags:
        - moderation
      summary: Get all questions asked by a user. Need Bearer token in Authorization header and admin rights.
      parameters:
        - in: path
          name: user
          required: true
          schema:
            type: string
          description: The username of the user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    text:
                      type: string
                      example: What is the meaning of life?
                    is_author_anonymous:
                      type: boolean
                      example: true
                    author_id:
                      type: integer
                      example: 1
                    receiver_id:
                      type: integer
                      example: 1
                    created_at:
                      type: string
                      format: date-time
                      example: '2022-01-01T12:00:00Z'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
  /moderation/ban_user:
    post:
      tags:
        - moderation
      summary: Ban a user. Need Bearer token in Authorization header and admin rights. Duration is in hours.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  example: 1
                reason:
                  type: string
                  example: "Spamming"
                duration:
                  type: integer
                  example: 7 
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
  /moderation/pardon_user:
    post:
      tags:
        - moderation
      summary: Pardon a user. Need Bearer token in Authorization header and admin rights.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ban_id:
                  type: integer
                  example: 1
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found